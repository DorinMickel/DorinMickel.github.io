{"version":3,"sources":["pages/maxresdefault.jpg","pages/Homepage.js","pages/Login.js","pages/Signup.js","pages/Dashboard.js","components/MainNavbar.js","pages/Tenants.js","components/FilterSortBar.js","components/IssueMessageContent.js","components/ModalButton.js","components/NewIssueModal.js","pages/Messages.js","pages/Issues.js","pages/Voting.js","App.js","index.js"],"names":["Homepage","props","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","src","maxresdefault","React","Component","Login","validateData","allTenants","find","tenantObj","email","toLowerCase","state","pwd","login","window","location","setState","errorText","Container","Form","Col","xs","lg","this","Alert","variant","onClose","dismissible","Group","controlId","Label","Control","onChange","e","target","value","type","placeholder","Button","onClick","to","Signup","CreateMember","newMember","userId","uuidv4","name","isCommitteeMember","newCommunity","communityName","address","city","memberObj","addNewTenant","addCommunity","Dashboard","children","withRouter","MainNavbar","activeUser","Tenants","showDetails","index","indexOf","apt","isTenantDetailsOpen","openModal","isModalOpen","closeModal","isUpdateModalOpen","addTanent","tanentObj","filteredTenants","event","filterText","deleteTenant","handleChange","updateTenantDetails","tenantIndex","editTenantDetails","updateTanentObj","tenantsList","filter","tenant","input","includes","map","ListGroup","Item","action","disabled","Modal","Dialog","Header","closeButton","Title","Body","Check","label","Footer","FilterSortBar","filterByPriority","filterIssues","filterMessages","searchWithText","val","searchIssues","searchMessage","sortByPriority","sortingByPriority","sortByDate","item","Row","IssuesSort","as","sm","defaultValue","priorityOptions","column","IssueMessageContent","deleteItem","selectedIndex","removeItem","deletedItem","addComment","newComment","userName","comment","addNewComment","openUpdateIssueModal","selectedItemCopy","selectedItem","title","details","priority","imgSrc","openUpdateMessageModal","editItemDetails","updatedItemObj","updateItemDetails","closeContent","console","log","ativeUserCopy","itemComments","comments","isOpen","IssueUpdateDeleteBtn","MessagesUpdateDeleteBtn","deleteBtnText","size","aria-labelledby","UpdateModalTitle","required","rows","ModalButton","buttonText","NewIssueModal","openUpdateModal","addNewItem","date","Date","newItemObj","createNewItem","validated","setValidated","tenantCreateIssue","modalTitle","noValidate","Feedback","createBtnText","Messages","openMessage","message","commentsCopy","concat","selectedCopy","addMessageComment","close","option","filterOption","searchInput","searchText","messagesList","allMessages","fromDate","format","removeMessage","reverse","pathname","Issues","showIssue","issue","test","addIssueComment","options","prioritySort","priorityArr","activeUserCopy","issuesList","allIssues","slice","sort","a","b","removeIssue","Voting","App","localCommunitiestring","JSON","stringify","allCommunities","localStorage","localCommunities","newTenant","localtenants","localTenants","deletedTenant","clearedTenants","clearedItems","localIssues","localMesagges","createNewMessage","newMessageObj","reportNewIssue","issueObj","localIssuesString","localMessages","updateIssueItem","Issue","IssueToUpdate","updateMessageItem","MessageToUpdate","updatedTenantObj","tenantToUpdate","logout","communityData","parse","communityAccounts","tenantsData","tenantsAccounts","messagesData","savedMessages","issuesData","savedIssues","Fragment","exact","path","length","updateItem","history","createHashHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff4be7ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/maxresdefault.1754e671.jpg\";","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport './pages.css';\r\nimport maxresdefault from \"./maxresdefault.jpg\"\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/#/\">HOA Systems</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                        <Nav.Link href=\"/#/login\">Login</Nav.Link>\r\n                        <Nav.Link href=\"/#/signup\">Sign Up</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <div className=\"hompage-img\">\r\n                    <img src={maxresdefault}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { Alert, Button, Col, Container, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './pages.css'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '', \r\n            pwd: '',\r\n            errorText: ''\r\n        }\r\n    }\r\n\r\n    validateData = () => {\r\n        const validation = this.props.allTenants.find(tenantObj => {\r\n            if(tenantObj.email.toLowerCase() === this.state.email.toLowerCase() && tenantObj.pwd === this.state.pwd){\r\n                this.props.login(tenantObj)\r\n                window.location.href = \"/#/dashboard\"\r\n                \r\n            }\r\n            else {\r\n                this.setState({\r\n                    errorText: \"Incorrect email address or password\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <h1>Welcome Back</h1>\r\n                <Form>\r\n                    <Col xs lg=\"5\">\r\n                        {this.state.errorText ? <Alert variant=\"danger\" onClose={() => {}} dismissible>{this.state.errorText}</Alert> : null}\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control onChange={(e) => this.setState({email: e.target.value})} value={this.state.email} type=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId=\"formGroupPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control onChange={(e) => this.setState({pwd: e.target.value})} value={this.state.pwd} type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Button onClick={this.validateData} variant=\"primary\" type=\"button\">\r\n                        Log me in\r\n                        </Button>\r\n                        <Link className=\"login-linkToSignup\" to=\"/signup\">SignUp</Link>\r\n                    </Col>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Alert, Button, Col, Container, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './pages.css'\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '', \r\n            pwd: '',\r\n            communityName: '',\r\n            address: '',\r\n            city: '',\r\n            errorText: ''\r\n        }\r\n    }\r\n    CreateMember = () => {\r\n        const newMember = {\r\n            userId: uuidv4(),\r\n            name: this.state.name,\r\n            email: this.state.email, \r\n            pwd: this.state.pwd,\r\n            isCommitteeMember: true\r\n        }\r\n        const newCommunity = {\r\n            communityName: this.state.communityName,\r\n            address: this.state.address,\r\n            city: this.state.city\r\n        } \r\n        // TODO: if email exists make alert bootstrap/ add validation in state\r\n        const foundEmail = this.props.allTenants.find(memberObj => {\r\n            return (memberObj.email === newMember.email)\r\n        })\r\n            if (foundEmail) {\r\n                this.setState({\r\n                    errorText: `Email adress is already exists. Please enter a new one, or try to login.`\r\n                }) \r\n            }\r\n            else {\r\n                this.props.addNewTenant(newMember)\r\n                this.props.addCommunity(newCommunity, newMember)\r\n                window.location.href=\"/#/dashboard\"\r\n            }      \r\n    }   \r\n    \r\n    render(){\r\n        return(\r\n            <Container>\r\n                <h1>Hello New Committee Member, Welcome Aboard!</h1>\r\n                <Form >\r\n                    <Col xs lg=\"5\">\r\n                        <Form.Group controlId=\"formGroupFullName\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={(e)=>this.setState({name: e.target.value})} type=\"text\" placeholder=\"Enter your full name\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control onChange={(e)=>this.setState({email: e.target.value})} type=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n                        {this.state.errorText ? <Alert  variant=\"danger\" onClose={() => {}} dismissible>{this.state.errorText}</Alert>:null}\r\n                        <Form.Group controlId=\"formGroupPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control onChange={(e)=>this.setState({pwd: e.target.value})} type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId=\"formGroupCommunity\">\r\n                            <Form.Label>Community name</Form.Label>\r\n                            <Form.Control onChange={(e)=>this.setState({communityName: e.target.value})} placeholder=\"Enter an original name\" />\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId=\"formGridAddress\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control onChange={(e)=>this.setState({address: e.target.value})} placeholder=\"1234 Main St\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formGridCity\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control onChange={(e)=>this.setState({city: e.target.value})} placeholder=\"Tel-Aviv\"/>\r\n                        </Form.Group>\r\n                        \r\n                        <Button onClick={this.CreateMember} variant=\"primary\" type=\"button\">\r\n                            Sign me up\r\n                        </Button>\r\n                        <Link className=\"signup-linkToLogin\" to=\"/login\">Login</Link>\r\n                    </Col>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <Container>\r\n               {this.props.children}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withRouter(Dashboard);","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass MainNavbar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/#/\">HOA Systems</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/#/dashboard\">Dashboard</Nav.Link>\r\n                        {(this.props.activeUser.isCommitteeMember) ? \r\n                        <Nav.Link href=\"/#/tenants\">Tenants</Nav.Link> : null}\r\n                        <Nav.Link href=\"/#/messages\">Messages</Nav.Link>\r\n                        <Nav.Link href=\"/#/issues\">Issues</Nav.Link>\r\n                        <Nav.Link href=\"/#/voting\">Voting</Nav.Link>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        <Nav.Link href=\"/#/\">Logout</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainNavbar;","import React from 'react';\r\nimport { Button, Container, Form, ListGroup, Modal } from 'react-bootstrap';\r\nimport './pages.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass Tenants extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            index: -1,\r\n            name: '',\r\n            email: '',\r\n            pwd: '',\r\n            apt: '',\r\n            isTenantDetailsOpen: false,\r\n            isModalOpen: false,\r\n            isUpdateModalOpen: false,\r\n            filterText: ''\r\n        }\r\n    }\r\n    showDetails = (tenantObj) => {     \r\n        const index = this.props.allTenants.indexOf(tenantObj)\r\n        this.setState({\r\n            index: index,\r\n            name: tenantObj.name,\r\n            email: tenantObj.email,\r\n            apt: tenantObj.apt,\r\n            isTenantDetailsOpen: ! this.state.isTenantDetailsOpen\r\n        })\r\n    }\r\n    openModal = () => {\r\n        this.setState({\r\n            isModalOpen: true,\r\n            index: -1,\r\n            name: '',\r\n            email: '',\r\n            pwd: '',\r\n            apt: '',\r\n        })\r\n    }\r\n    closeModal = () => {\r\n        this.setState({\r\n            isModalOpen: false,\r\n            isUpdateModalOpen: false\r\n        })\r\n    }\r\n    addTanent = () => {\r\n        const tanentObj = {\r\n            userId: uuidv4(),\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            pwd: this.state.pwd,\r\n            apt: this.state.apt,\r\n        }\r\n        this.closeModal()\r\n        this.props.addNewTenant(tanentObj)\r\n    }\r\n\r\n    filteredTenants = (event) => { \r\n        this.setState({\r\n            filterText: event.target.value\r\n        })\r\n    }\r\n\r\n    deleteTenant = () => {\r\n        const index = this.state.index\r\n        this.props.deleteTenant(index)\r\n        this.setState({\r\n            isTenantDetailsOpen: false\r\n        })\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    updateTenantDetails = (tenantIndex) => {\r\n        this.setState({\r\n            isUpdateModalOpen: true,\r\n            index: tenantIndex\r\n        })\r\n    }\r\n\r\n    editTenantDetails = () => {\r\n        const updateTanentObj = {\r\n            userId: this.state.userId,\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            pwd: this.state.pwd,\r\n            apt: this.state.apt,\r\n        }\r\n        this.closeModal()\r\n        this.props.editTenantDetails(updateTanentObj, this.state.index)\r\n    }\r\n\r\n    render(){\r\n        const tenantsList = this.props.allTenants.filter(tenant => {\r\n            const input = this.state.filterText\r\n            return (tenant.name.toLowerCase().includes(input) || tenant.email.includes(input) || tenant.apt.includes(input) || input === '')\r\n        }).map((tenant, tenantIndex) => {\r\n            return (\r\n                <div>\r\n                    <ListGroup.Item action onClick={() => this.showDetails(tenant)} className=\"tenants-list\">\r\n                    {tenant.name}</ListGroup.Item>\r\n                    <div className={(this.state.isTenantDetailsOpen && this.state.index === this.props.allTenants.indexOf(tenant)) ? \"tenant-details\" : \"close\"}>\r\n                        <div>{`Name: ${this.state.name}`}</div>\r\n                        <div>{`Email: ${this.state.email}`}</div>\r\n                        <div>{`Apt: ${this.state.apt}`}</div>\r\n                        <div className=\"tenant-changes-btn\">\r\n                            <Button onClick={() => this.updateTenantDetails(tenantIndex)}>Update</Button>\r\n                            <Button onClick={this.deleteTenant} variant=\"danger\">Delete</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        \r\n        return(\r\n            <Container className=\"p-tenants\">\r\n                <Form className=\"tenant-filter-box\">\r\n                    <button disabled className=\"tenant-filter-button\"><img src=\"https://www.kindacode.com/wp-content/uploads/2020/12/search.png\"/></button>\r\n                    <Form.Control onChange={this.filteredTenants} value={this.state.filterText} className=\"tenant-search-input\" type=\"text\" placeholder=\"Filter\"/>\r\n                </Form>\r\n                <Button onClick={this.openModal} className=\"add-tenant-btn\" type=\"button\">\r\n                    Add Tenant\r\n                </Button>\r\n                <Modal.Dialog className={(this.state.isModalOpen || this.state.isUpdateModalOpen) ? \"add-tenant-modal\" : \"close\"}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add new tenant</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group >\r\n                            <Form.Label>Full name</Form.Label>\r\n                            <Form.Control name=\"name\" onChange={this.handleChange} value={this.state.name} type=\"text\" placeholder=\"Enter name\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control name=\"email\" onChange={this.handleChange} value={this.state.email} type=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control name=\"pwd\" onChange={this.handleChange} value={this.state.pwd} type=\"text\" placeholder=\"Choose password\" />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Apartment</Form.Label>\r\n                            <Form.Control name=\"apt\" onChange={this.handleChange} value={this.state.apt} type=\"text\" placeholder=\"#apt\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Committee member\" />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.closeModal} variant=\"secondary\">Close</Button>\r\n                        <Button variant=\"primary\" onClick={(this.state.isModalOpen && !this.state.isUpdateModalOpen) ? this.addTanent : this.editTenantDetails}>Save changes</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Dialog>\r\n                <ListGroup >\r\n                    {tenantsList}\r\n                </ListGroup>\r\n                </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tenants;","import React from 'react';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport './components.css'\r\n\r\n\r\nclass FilterSortBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            item: '',\r\n            \r\n        }\r\n    }\r\n    \r\n    filterByPriority = (event) => {\r\n        const value = event.target.value\r\n        if(this.props.filterIssues){\r\n            this.props.filterIssues(value)\r\n        }\r\n        else{\r\n            this.props.filterMessages(value)\r\n        }\r\n    }\r\n\r\n    searchWithText = (event) => {\r\n        const val = event.target.value\r\n        if(this.props.searchIssues){\r\n            this.props.searchIssues(val)\r\n        }\r\n        else {\r\n            this.props.searchMessage(val)\r\n        }\r\n    }\r\n\r\n    sortByPriority = () => {\r\n        this.props.sortingByPriority(true)\r\n    }\r\n\r\n    sortByDate = () => {\r\n        this.props.sortingByPriority(false)\r\n    }\r\n \r\n    render(){\r\n        return(\r\n                <Form className=\"messages-filter-sort\">\r\n                    <Form.Row className={(this.props.IssuesSort) ? \"justify-content-around\" : \"justify-content-start\"}>\r\n                        <Form.Group as={Col} sm={6}>\r\n                            <button disabled className=\"tenant-filter-button\"><img src=\"https://www.kindacode.com/wp-content/uploads/2020/12/search.png\"/></button>\r\n                            <Form.Control onChange={this.searchWithText} className=\"message-filter-input\" type=\"text\" placeholder=\"Search\"/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} sm={3} controlId=\"formGridState\">\r\n                            \r\n                            <Form.Control onChange={this.filterByPriority} as=\"select\" defaultValue=\"Filter by priority\">\r\n                                <option value=\"\">Filter by priority</option>\r\n                                {this.props.priorityOptions}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {(this.props.IssuesSort) ? \r\n                            <Form.Group as={Row} sm={3}>\r\n                            <Form.Label as=\"legend\" column >\r\n                                Sort By:\r\n                            </Form.Label>\r\n                                    <Form.Check \r\n                                    onChange={this.sortByDate} \r\n                                    className=\"align-self-center\"\r\n                                    name=\"sort\"\r\n                                    type=\"radio\"\r\n                                    label=\"Date\"\r\n                                    />\r\n                                    <Form.Check \r\n                                    onChange={this.sortByPriority} \r\n                                    className=\"align-self-center\"\r\n                                    name=\"sort\"\r\n                                    type=\"radio\"\r\n                                    label=\"Priority\"\r\n                                    />\r\n                            </Form.Group>\r\n                        : null}\r\n                    </Form.Row>\r\n                </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterSortBar;","import React from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\nimport \"./components.css\"\r\n\r\n\r\n\r\nclass IssueMessageContent extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isUpdateModalOpen: false,\r\n            index: -1,\r\n        }\r\n    }\r\n    deleteItem = () => {\r\n        const index = this.props.selectedIndex\r\n        this.props.removeItem(index)\r\n        this.props.deletedItem(false)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    addComment = () => {\r\n        const newComment = {\r\n            userName: this.props.activeUser.name,\r\n            comment: this.state.comment\r\n        }\r\n        this.props.addNewComment(newComment)\r\n        this.setState({\r\n            comment: ''\r\n        })\r\n    }\r\n\r\n    openUpdateIssueModal = () => {\r\n        const selectedItemCopy = {...this.props.selectedItem}\r\n        const priorityArr = [\"Normal\", \"Important\",\"Urgent\"]\r\n        this.setState({\r\n            isUpdateModalOpen: true,\r\n            title: selectedItemCopy.title,\r\n            details: selectedItemCopy.details,\r\n            priority: priorityArr[selectedItemCopy.priority],\r\n            imgSrc: selectedItemCopy.imgSrc,\r\n            index: this.props.selectedIndex\r\n        })\r\n    }\r\n\r\n    openUpdateMessageModal = () => {\r\n        const selectedItemCopy = {...this.props.selectedItem}\r\n        this.setState({\r\n            isUpdateModalOpen: true,\r\n            title: selectedItemCopy.title,\r\n            details: selectedItemCopy.details,\r\n            priority: selectedItemCopy.priority,\r\n            imgSrc: selectedItemCopy.imgSrc,\r\n            index: this.props.selectedIndex\r\n        })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            isUpdateModalOpen: false,\r\n        })\r\n    }\r\n\r\n    editItemDetails = () => {\r\n        const updatedItemObj = {\r\n            title: this.state.title,\r\n            details: this.state.details,\r\n            priority: this.state.priority,\r\n            imgSrc: this.state.imgSrc,\r\n            index: this.state.index\r\n        }\r\n        this.props.updateItemDetails(updatedItemObj)\r\n        this.props.closeContent(false)\r\n        this.closeModal()\r\n    }\r\n\r\n    render(){ \r\n        console.log(this.props.selectedItem)\r\n        const priorityArr = [\"Normal\", \"Important\",\"Urgent\"]\r\n        const ativeUserCopy = {...this.props.activeUser}        \r\n        const itemComments = this.props.selectedItem.comments.map( comment => {\r\n            return (<div className=\"d-flex\">\r\n                <div>{comment.userName}</div>: \r\n                <div className=\"comment-content ml-2\">{comment.comment}</div>\r\n            </div>)\r\n        })\r\n        \r\n        return(\r\n            <div className={(this.props.isOpen && this.props.index === this.props.selectedIndex) ? \"issue-details\" : \"close\"}>\r\n                <div className=\"issue-img\">\r\n                <img src={this.props.selectedItem.imgSrc}/> \r\n                </div>\r\n                <div className=\"d-flex pb-0 flex-column issue-info\">\r\n                    <div className=\"d-flex\" >\r\n                        <label className=\"mr-2 p-0\">Details:</label>\r\n                        <p className=\" p-0\">{this.props.selectedItem.details}</p>\r\n                    </div>\r\n                    <div className=\"d-flex \" >\r\n                        <label className=\"mr-2 p-0\">Priority:</label>\r\n                        <p className=\"p-0\">{(this.props.IssueUpdateDeleteBtn) ? priorityArr[this.props.selectedItem.priority] : this.props.selectedItem.priority}</p>\r\n                    </div>\r\n                    {((this.props.IssueUpdateDeleteBtn && (this.props.selectedItem.userId===ativeUserCopy.userId)) ||\r\n                    (ativeUserCopy.isCommitteeMember && this.props.MessagesUpdateDeleteBtn)) ? \r\n                    <div className=\"align-self-end mt-auto \">\r\n                        <Button onClick={(this.props.IssueUpdateDeleteBtn) ? this.openUpdateIssueModal : this.openUpdateMessageModal}\r\n                         type=\"button\">Update</Button>\r\n                        <Button onClick={this.deleteItem} className=\"ml-1\" variant=\"danger\">{this.props.deleteBtnText}</Button>\r\n                    </div> : null}\r\n                    <div className=\"c-new-issue-modal\">\r\n                        <Modal.Dialog \r\n                        size=\"lg\"\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                        className={this.state.isUpdateModalOpen ? \"new-issue-modal\" : \"close\"}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>{this.props.UpdateModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n\r\n                            <Modal.Body>\r\n                            <Form >\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm={2}>Title: </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control name=\"title\" onChange={this.handleChange} value={this.state.title} required type=\"text\"  />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm={2}>Details</Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control name=\"details\" onChange={this.handleChange} value={this.state.details} required as=\"textarea\" rows={3} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label column sm={2}>Priority</Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control name=\"priority\" onChange={this.handleChange} value={this.state.priority} as=\"select\">\r\n                                            {this.props.priorityOptions}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm={2}>image URL:</Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control name=\"imgSrc\" onChange={this.handleChange} value={this.state.imgSrc} type=\"text\" />\r\n                                        <img src=\"\"/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Modal.Body>\r\n\r\n                            <Modal.Footer>\r\n                                <Button onClick={this.closeModal} variant=\"secondary\">Close</Button>\r\n                                <Button onClick={this.editItemDetails} variant=\"primary\" >Save Changes</Button>\r\n                            </Modal.Footer>\r\n                        </Modal.Dialog>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-fill members-comments\">\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column >Comments:</Form.Label>\r\n                    <div>\r\n                        {itemComments}\r\n                    </div>\r\n                    <Col sm={15}>\r\n                        <Form.Control name=\"comment\" onChange={this.handleChange} value={this.state.comment} as=\"textarea\" lg={6} rows={3} />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                </div>\r\n                <div className=\"issue-details-btn\">\r\n                    <Button onClick={this.addComment} type=\"button\">Add Comment</Button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default IssueMessageContent;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './components.css'\r\n\r\n\r\nclass ModalButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n    \r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"c-modal-btn\">\r\n                <Button onClick={() => this.props.openModal(true)}  type=\"button\">\r\n                    {this.props.buttonText}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalButton;","import React from 'react';\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport './components.css'\r\nimport ModalButton from './ModalButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass NewIssueModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isModalOpen: false,\r\n            validated: false, \r\n            setValidated: false,\r\n            \r\n        }\r\n    }\r\n    \r\n    openModal = () => {\r\n        this.setState({\r\n            isModalOpen: true,\r\n            title: '',\r\n            details: '',\r\n            priority: this.props.priority,\r\n            imgSrc: '',\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    closeModal = () => {\r\n        if(this.state.isModalOpen === true){\r\n            this.setState({\r\n                isModalOpen: false,\r\n            })\r\n        }\r\n        else{\r\n            this.props.openUpdateModal(false)\r\n        }\r\n    }\r\n\r\n    addNewItem = () => {\r\n        const date = new Date();\r\n        const newItemObj = {\r\n            id: uuidv4(),\r\n            userId: this.props.activeUser.userId,\r\n            title: this.state.title,\r\n            details: this.state.details,\r\n            priority: this.state.priority,\r\n            imgSrc: this.state.imgSrc,\r\n            comments: [],\r\n            date: date\r\n        }\r\n        console.log(this.state.priority)\r\n        if(this.state.isModalOpen === true){\r\n            this.props.createNewItem(newItemObj)\r\n        }\r\n        \r\n        this.closeModal()\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"c-new-issue-modal\">\r\n                {(this.props.activeUser.isCommitteeMember || this.props.tenantCreateIssue) ? \r\n                <ModalButton\r\n                    openModal={this.openModal}\r\n                    buttonText={this.props.buttonText}/> : null}\r\n                <Modal.Dialog \r\n                size=\"lg\"\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                //\r\n                className={(this.state.isModalOpen || this.props.isUpdateModalOpen) ? \"new-issue-modal\" : \"close\"}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.props.modalTitle}</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                    <Form noValidate validated={this.validated} >\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={2}>Title: </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control name=\"title\" onChange={this.handleChange} value={this.state.title} required type=\"text\" \r\n                                // defaultValue={(this.props.isUpdateModalOpen && !this.state.isModalOpen) ? this.props.selectedItem.title : ''}\r\n                                // key={Math.floor((Math.random() * 1000))} \r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">Please enter item title</Form.Control.Feedback>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={2}>Details</Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control name=\"details\" onChange={this.handleChange} value={this.state.details} required as=\"textarea\" rows={3}\r\n                                // defaultValue={(this.props.isUpdateModalOpen && !this.state.isModalOpen) ? this.props.selectedItem.details : ''} \r\n                                // key={Math.floor((Math.random() * 1000))}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">Please enter item details</Form.Control.Feedback>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label column sm={2}>Priority</Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control name=\"priority\" onChange={this.handleChange} value={this.state.priority} as=\"select\" \r\n                                // defaultValue={(this.props.isUpdateModalOpen && !this.state.isModalOpen) ? this.props.selectedItem.priority : ''} \r\n                                // key={Math.floor((Math.random() * 1000))}\r\n                                >\r\n                                    {this.props.priorityOptions}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={2}>image URL:</Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control name=\"imgSrc\" onChange={this.handleChange} value={this.state.imgSrc} type=\"text\" \r\n                                // defaultValue={(this.props.isUpdateModalOpen && !this.state.isModalOpen) ? this.props.selectedItem.imgSrc : ''}\r\n                                // key={Math.floor((Math.random() * 1000))}\r\n                                />\r\n                                <img src=\"\"/>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.closeModal} variant=\"secondary\">Close</Button>\r\n                        <Button onClick={this.addNewItem} variant=\"primary\" >{this.props.createBtnText}</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewIssueModal;","import React from 'react';\r\nimport { Container, ListGroup, } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\nimport { withRouter } from 'react-router';\r\nimport FilterSortBar from '../components/FilterSortBar';\r\nimport IssueMessageContent from '../components/IssueMessageContent';\r\nimport NewIssueModal from '../components/NewIssueModal';\r\nimport './pages.css'\r\n\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isModalOpen:false,\r\n            isOpen: false,\r\n            selectedItem:{\r\n                comments: []\r\n            },\r\n            index: -1,\r\n            title: '',\r\n            details: '',\r\n            priority: 'info',\r\n            imgSrc: '',\r\n            filterOption: '',\r\n            searchText: '',\r\n            isUpdateModalOpen: false\r\n        }\r\n    }\r\n    \r\n    \r\n    openMessage = (message, index) => {\r\n        this.setState({\r\n            isOpen: ! this.state.isOpen,\r\n            selectedIndex: index,\r\n            selectedItem: {...message}\r\n        })\r\n    }\r\n\r\n    addNewComment = (newComment) => {\r\n        const commentsCopy = [...this.state.selectedItem.comments].concat(newComment);\r\n        const selectedCopy = {...this.state.selectedItem, comments: commentsCopy}\r\n        this.setState({\r\n            selectedItem: selectedCopy\r\n        })\r\n        this.props.addMessageComment(commentsCopy, this.state.selectedIndex)\r\n    }\r\n\r\n    deletedItem = (close) => {\r\n        this.setState({\r\n            isOpen: close,\r\n        })\r\n    }\r\n\r\n    filterMessages = (option) => {\r\n        this.setState({\r\n            filterOption: option\r\n        })\r\n    }\r\n\r\n    searchMessage = (searchInput) => {\r\n        this.setState({\r\n            searchText: searchInput\r\n        })\r\n    }\r\n    \r\n    closeContent = (close) => {\r\n        this.setState({\r\n            isOpen: close,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const messagesList = this.props.allMessages.filter(message => {\r\n            return((message.priority === this.state.filterOption || this.state.filterOption === '') &&\r\n            (message.title.toLowerCase().includes(this.state.searchText.toLowerCase()) || message.title.toLowerCase().includes(this.state.searchText.toLowerCase())))\r\n        }).map((message, index) => {\r\n            return (\r\n                <div>\r\n                    <ListGroup.Item className=\"d-flex justify-content-between messages-list-items\" onClick={() => this.openMessage(message, index)}>\r\n                        <div>{message.title}</div> \r\n                        <div >Posted on: <Moment fromDate format=\"DD-MM-YYYY\">{message.date}</Moment></div>\r\n                        </ListGroup.Item>\r\n                    <IssueMessageContent\r\n                        allMessages={this.props.allMessages}\r\n                        isOpen={this.state.isOpen}\r\n                        index={index}\r\n                        selectedIndex={this.state.selectedIndex}\r\n                        selectedItem={this.state.selectedItem}\r\n                        removeItem={this.props.removeMessage}\r\n                        deletedItem={this.deletedItem}\r\n                        addNewComment={this.addNewComment}\r\n                        activeUser={this.props.activeUser}\r\n                        deleteBtnText=\"Delete Message\"\r\n                        UpdateModalTitle=\"Update Message Details\"\r\n                        MessagesUpdateDeleteBtn={true}\r\n                        //\r\n                        closeContent={this.closeContent}\r\n                            priorityOptions={[\r\n                                <option value=\"info\">Info</option>,\r\n                                <option value=\"important\">Important!</option>]}\r\n                        updateItemDetails={this.props.updateItemDetails}\r\n                    />\r\n                </div>\r\n                )\r\n        }).reverse()\r\n        return(\r\n            <Container className=\"p-messages\">\r\n                {this.props.location.pathname === \"/messages\" &&\r\n                <FilterSortBar\r\n                    priorityOptions={[\r\n                        <option value=\"info\">Info</option>,\r\n                        <option value=\"important\">Important!</option>]}\r\n                    allMessages={this.props.allMessages}\r\n                    filterMessages={this.filterMessages}\r\n                    searchMessage={this.searchMessage}\r\n                />\r\n                }   \r\n                {this.props.location.pathname === \"/messages\" &&            \r\n                <NewIssueModal\r\n                    createNewItem={this.props.createNewItem} \r\n                    activeUser={this.props.activeUser}\r\n                    buttonText={`New Message`}\r\n                    modalTitle={`Write a new message`}\r\n                    priorityOptions={[\r\n                        <option value=\"info\">Info</option>,\r\n                        <option value=\"important\">Important!</option>]}\r\n                    createBtnText={`Create`}  \r\n                    priority={this.state.priority}\r\n                />\r\n                }   \r\n                <ListGroup className=\"messages-list\">\r\n                    {messagesList}                    \r\n                </ListGroup>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Messages);","import React from 'react';\r\nimport { Container, ListGroup } from 'react-bootstrap';\r\nimport IssueMessageContent from '../components/IssueMessageContent';\r\nimport NewIssueModal from '../components/NewIssueModal';\r\nimport { withRouter } from \"react-router-dom\"\r\nimport './pages.css'\r\nimport FilterSortBar from '../components/FilterSortBar';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nclass Issues extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            selectedIndex: -1,\r\n            selectedItem: {\r\n                comments:[]\r\n            },\r\n            filterOption: '',\r\n            searchText: '',\r\n            prioritySort: false,\r\n            //\r\n            isUpdateModalOpen: false,\r\n            priority: 0,\r\n            title: '',\r\n            details: '',\r\n            imgSrc: '',\r\n\r\n        }\r\n    }\r\n\r\n    showIssue = (issue, index) => {\r\n        const test = index\r\n        this.setState({\r\n            isOpen: !this.state.isOpen,\r\n            selectedIndex: test,\r\n            selectedItem: { ...issue }\r\n        })\r\n    }\r\n\r\n    deletedItem = (close) => {\r\n        this.setState({\r\n            isOpen: close,\r\n        })\r\n    }\r\n\r\n    filterIssues = (option) => {\r\n        this.setState({\r\n            filterOption: option\r\n        })\r\n    }\r\n\r\n    addNewComment = (newComment) => {\r\n        const commentsCopy = [...this.state.selectedItem.comments].concat(newComment);\r\n        const selectedCopy = {...this.state.selectedItem, comments: commentsCopy}\r\n        this.setState({\r\n            selectedItem: selectedCopy\r\n        })\r\n        this.props.addIssueComment(commentsCopy, this.state.selectedIndex)\r\n    }\r\n\r\n    searchIssues = (searchInput) => {\r\n        this.setState({\r\n            searchText: searchInput\r\n        })\r\n    }\r\n\r\n    sortingByPriority = (options) => {\r\n        this.setState({\r\n            prioritySort: options\r\n        })\r\n    }\r\n\r\n    //\r\n    closeContent = (close) => {\r\n        this.setState({\r\n            isOpen: close,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const priorityArr = [\"Normal\", \"Important\",\"Urgent\"]\r\n        const activeUserCopy = {...this.props.activeUser}\r\n        const date = new Date();\r\n        const issuesList = this.props.allIssues.slice().sort((a, b) => {\r\n            return ((this.state.prioritySort) ? a.priority - b.priority : 0)\r\n            }).filter(issue => {\r\n            return ((priorityArr[issue.priority] === this.state.filterOption || this.state.filterOption === '') && \r\n            (issue.title.toLowerCase().includes(this.state.searchText.toLowerCase()) || \r\n            issue.details.toLowerCase().includes(this.state.searchText.toLowerCase())))\r\n            }).map((issue, index) => {\r\n                return (\r\n                    <div key={index}>\r\n                        <ListGroup.Item className=\"d-flex justify-content-between issues-list-items\" onClick={() => this.showIssue(issue, index)}>\r\n                            <div>{issue.title}</div> \r\n                            <div >Issued on: <Moment fromDate format=\"DD-MM-YYYY\">{issue.date}</Moment></div>\r\n                            </ListGroup.Item>\r\n                        <IssueMessageContent\r\n                            allIssues={this.props.allIssues}\r\n                            isOpen={this.state.isOpen}\r\n                            index={index}\r\n                            selectedIndex={this.state.selectedIndex}\r\n                            selectedItem={this.state.selectedItem}\r\n                            removeItem={this.props.removeIssue}\r\n                            deletedItem={this.deletedItem}\r\n                            addNewComment={this.addNewComment}\r\n                            activeUser={activeUserCopy}\r\n                            deleteBtnText=\"Resolve Issue\"\r\n                            UpdateModalTitle=\"Update Issue Details\"\r\n                            IssueUpdateDeleteBtn={true}\r\n                            //\r\n                            closeContent={this.closeContent}\r\n                            priorityOptions={[\r\n                                <option value={0}>Normal</option>,\r\n                                <option value={1}>Important</option>,\r\n                                <option value={2}>Urgent</option>]}\r\n                            updateItemDetails={this.props.updateItemDetails}\r\n                        />\r\n                    </div>\r\n                )\r\n        }).reverse()\r\n        return (\r\n            <Container className=\"p-issues\">\r\n                {this.props.location.pathname === \"/issues\" && \r\n                <FilterSortBar\r\n                    priorityOptions={[\r\n                        <option value=\"Normal\">Normal</option>,\r\n                        <option value=\"Important\">Important</option>,\r\n                        <option value=\"Urgent\">Urgent</option>]}\r\n                    filterIssues={this.filterIssues}\r\n                    searchIssues={this.searchIssues}\r\n                    IssuesSort={true}\r\n                    sortingByPriority={this.sortingByPriority}\r\n                        />\r\n                }\r\n                {this.props.location.pathname === \"/issues\" && \r\n                <NewIssueModal \r\n                    createNewItem={this.props.createNewItem} \r\n                    activeUser={this.props.activeUser}\r\n                    buttonText={`Report an issue`}\r\n                    modalTitle={`Elaborate the issue`}\r\n                    priorityOptions={[\r\n                        <option value={0}>Normal</option>,\r\n                        <option value={1}>Important</option>,\r\n                        <option value={2}>Urgent</option>]}\r\n                    priority={this.state.priority}\r\n                    createBtnText={`Report`}\r\n                    tenantCreateIssue={true}\r\n                    />}\r\n                {issuesList}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Issues);","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n\r\nclass Voting extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <Container>\r\n               <h1 className=\"mt-5 text-center\">There is nothing here at the moment</h1>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Voting;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Homepage from './pages/Homepage';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport communityAccounts from './data/communityAccounts.json'\r\nimport Dashboard from './pages/Dashboard';\r\nimport MainNavbar from './components/MainNavbar';\r\nimport Tenants from './pages/Tenants';\r\nimport tenantsAccounts from './data/tenantsAccounts.json'\r\nimport Messages from './pages/Messages';\r\nimport savedMessages from './data/savedMessages.json'\r\nimport Issues from './pages/Issues';\r\nimport savedIssues from './data/savedIssues.json'\r\nimport Voting from './pages/Voting';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    let communityData=[];\r\n    if(localStorage.localCommunities){\r\n      communityData = JSON.parse(localStorage.localCommunities)\r\n    }\r\n    else {\r\n      communityData = communityAccounts\r\n    }\r\n\r\n    let tenantsData=[];\r\n    if(localStorage.localTenants){\r\n      tenantsData = JSON.parse(localStorage.localTenants)\r\n    }\r\n    else {\r\n      tenantsData = tenantsAccounts\r\n    }\r\n\r\n    let messagesData=[];\r\n    if(localStorage.localMesagges){\r\n      messagesData = JSON.parse(localStorage.localMesagges)\r\n    }\r\n    else {\r\n      messagesData = savedMessages\r\n    }\r\n\r\n    let issuesData = [];\r\n    if(localStorage.localIssues){\r\n  \r\n      issuesData = JSON.parse(localStorage.localIssues)\r\n    }\r\n    else {\r\n      issuesData = savedIssues\r\n    }\r\n\r\n    this.state = {\r\n      allCommunities: communityData,\r\n      allTenants: tenantsData,\r\n      allMessages: messagesData,\r\n      allIssues: issuesData,\r\n      activeUser: {\r\n        userId: 1,\r\n        communityName: \"BlaBla\",\r\n        name: \"Dorin Mickel\",\r\n        email: \"test@test.com\",\r\n        pwd: 123,\r\n        apt: 2,\r\n        isCommitteeMember: true},\r\n    }\r\n  }\r\n  addCommunity = (newCommunity,newMember) => {\r\n    const localCommunitiestring = JSON.stringify(this.state.allCommunities.concat(newCommunity))\r\n    localStorage.localCommunities = localCommunitiestring\r\n    this.setState({\r\n      allCommunities: this.state.allCommunities.concat(newCommunity),\r\n      activeUser: newMember\r\n    })\r\n  }\r\n  addNewTenant = (newTenant) => {\r\n    const localtenants = JSON.stringify(this.state.allTenants.concat(newTenant))\r\n    localStorage.localTenants = localtenants;\r\n    this.setState({\r\n      allTenants: this.state.allTenants.concat(newTenant)\r\n    })\r\n  }\r\n\r\n  deleteTenant = (deletedTenant) => {  \r\n    const clearedTenants = this.state.allTenants.filter((item, index) => {\r\n      return (index !== deletedTenant)\r\n    })\r\n    localStorage.localTenants = JSON.stringify(clearedTenants)\r\n    this.setState({\r\n      allTenants: clearedTenants\r\n    })\r\n  }\r\n\r\n  removeIssue = (deletedItem) => {\r\n    const clearedItems = this.state.allIssues.filter((item, index) => {\r\n      return (index !== deletedItem)\r\n    })\r\n    localStorage.localIssues = JSON.stringify(clearedItems)\r\n    this.setState({\r\n      allIssues: clearedItems\r\n    })\r\n  }\r\n\r\n  removeMessage = (deletedItem) => {\r\n    const clearedItems = this.state.allMessages.filter((item, index) => {\r\n      return (index !== deletedItem)\r\n    })\r\n    localStorage.localMesagges = JSON.stringify(clearedItems)\r\n    this.setState({\r\n      allMessages: clearedItems\r\n    })\r\n  }\r\n\r\n  createNewMessage = (newMessageObj) => {\r\n    const localMesagges = JSON.stringify(this.state.allMessages.concat(newMessageObj))\r\n    localStorage.localMesagges = localMesagges;\r\n    this.setState({\r\n      allMessages: this.state.allMessages.concat(newMessageObj)\r\n    })\r\n\r\n  }\r\n\r\n  reportNewIssue = (issueObj) => {\r\n    const localIssuesString = JSON.stringify(this.state.allIssues.concat(issueObj));\r\n    localStorage.localIssues = localIssuesString;\r\n    this.setState({\r\n      allIssues: this.state.allIssues.concat(issueObj)\r\n    })\r\n    console.log(this.state.allIssues)\r\n  }\r\n\r\n  addIssueComment = (comment, index) => {\r\n    this.state.allIssues[index].comments = comment\r\n    this.setState({\r\n      allIssues: this.state.allIssues\r\n    })\r\n    localStorage.localIssues = JSON.stringify(this.state.allIssues)\r\n  }\r\n\r\n  addMessageComment = (comment, index) => {\r\n    this.state.allMessages[index].comments = comment\r\n    this.setState({\r\n      allMessages: this.state.allMessages\r\n    })\r\n    localStorage.localMessages = JSON.stringify(this.state.allMessages)\r\n  }\r\n\r\n  updateIssueItem = (Issue) => {\r\n    const IssueToUpdate = this.state.allIssues[Issue.index]\r\n    IssueToUpdate.title = Issue.title\r\n    IssueToUpdate.details = Issue.details\r\n    IssueToUpdate.priority = Issue.priority\r\n    IssueToUpdate.imgSrc = Issue.imgSrc\r\n\r\n    this.setState({\r\n      allIssues: this.state.allIssues\r\n    })\r\n    localStorage.localIssues = JSON.stringify(this.state.allIssues)\r\n  } \r\n\r\n  updateMessageItem = (message) => {\r\n    const MessageToUpdate = this.state.allMessages[message.index]\r\n    MessageToUpdate.title = message.title\r\n    MessageToUpdate.details = message.details\r\n    MessageToUpdate.priority = message.priority\r\n    MessageToUpdate.imgSrc = message.imgSrc\r\n\r\n    this.setState({\r\n      allMessages: this.state.allMessages\r\n    })\r\n    localStorage.localMessages = JSON.stringify(this.state.allMessages)\r\n  }\r\n\r\n  editTenantDetails = (updatedTenantObj, index) => {\r\n    const tenantToUpdate = this.state.allTenants[index]\r\n    tenantToUpdate.name = updatedTenantObj.name\r\n    tenantToUpdate.email = updatedTenantObj.email\r\n    tenantToUpdate.pwd = updatedTenantObj.pwd\r\n    tenantToUpdate.apt = updatedTenantObj.apt\r\n\r\n    this.setState({\r\n      allTenants: this.state.allTenants\r\n    })\r\n    localStorage.localTenants = JSON.stringify(this.state.allTenants)\r\n    \r\n  }\r\n\r\n  logout = () => {\r\n    this.setState({\r\n      activeUser: null\r\n    })\r\n  }\r\n\r\n  login = (tenantObj) => {\r\n    this.setState({\r\n      activeUser: tenantObj\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <Route exact path=\"/\">\r\n          <Homepage></Homepage>\r\n        </Route>\r\n        <Route exact path=\"/signup\">\r\n          <Signup \r\n          addCommunity={this.addCommunity}\r\n          addNewTenant={this.addNewTenant}\r\n          allTenants={this.state.allTenants}\r\n          allCommunities={this.state.allCommunities}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Login \r\n          allTenants={this.state.allTenants}\r\n          login={this.login}\r\n          />\r\n        </Route>\r\n        <Route exact path={[\"/dashboard\", \"/tenants\", \"/messages\", \"/issues\", \"/voting\"]}>\r\n        <MainNavbar\r\n        activeUser={this.state.activeUser}/>\r\n        </Route>\r\n        <Route exact path=\"/dashboard\">\r\n          <Dashboard \r\n            activeUser={this.state.activeUser}>\r\n              <div className=\"messages-dashboard\">\r\n                <h2 className=\"d-flex\">New Messages <div className=\"ml-3 mt-2 number-of-items\">{this.state.allMessages.length}</div></h2>\r\n                <Messages \r\n                  allMessages={this.state.allMessages}/>\r\n              </div>\r\n              <div className=\"issues-dashboard d-flex flex-fill\">\r\n                <div className=\"flex-fill\">\r\n                  <h2 className=\"d-flex\">New Issues <div className=\"ml-3 mt-2 number-of-items\">{this.state.allIssues.length}</div></h2>\r\n                  <Issues \r\n                    allIssues={this.state.allIssues}/>\r\n                </div>\r\n                <div className=\"resolved-issues-dashboard flex-fill\">\r\n                <h2 className=\"d-flex\">Resolved Issues <div className=\"ml-3 mt-2 number-of-items\">0</div></h2>\r\n                \r\n                  There are no resolved issues to show\r\n                </div>\r\n              </div>\r\n          </Dashboard>\r\n        </Route>\r\n        <Route exact path=\"/tenants\">\r\n          <Tenants \r\n          allTenants={this.state.allTenants}\r\n          addNewTenant={this.addNewTenant}\r\n          deleteTenant={this.deleteTenant}\r\n          editTenantDetails={this.editTenantDetails}\r\n          /> \r\n        </Route>\r\n        <Route exact path=\"/messages\">\r\n          <Messages\r\n          allMessages={this.state.allMessages}\r\n          activeUser={this.state.activeUser}\r\n          createNewItem={this.createNewMessage}\r\n          removeMessage={this.removeMessage}\r\n          addMessageComment={this.addMessageComment}\r\n          updateItemDetails={this.updateMessageItem}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/issues\">\r\n          <Issues \r\n          allIssues={this.state.allIssues}\r\n          activeUser={this.state.activeUser}\r\n          createNewItem={this.reportNewIssue}\r\n          removeIssue={this.removeIssue}\r\n          addIssueComment={this.addIssueComment}\r\n          updateItem={this.updateIssueItem}\r\n          updateItemDetails={this.updateIssueItem}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/voting\">\r\n          <Voting/>\r\n        </Route>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { createHashHistory } from 'history'\n// import reportWebVitals from './reportWebVitals';\n\nconst history = createHashHistory()\n\nReactDOM.render(\n  <HashRouter history={history}>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}